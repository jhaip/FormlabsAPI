openapi: "3.0.2"
info:
  title: PreForm API
  version: "1.0"
servers:
  - url: http://localhost:44388
components:
  schemas:
    ErrorModel:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: string
              description: Unique and stable string identifying this error, e.g. "PRINTER_IP_NOT_FOUND"
            message:
              type: string
              description: Human-readable english string describing the error, e.g. "The printer at IP address 10.34.0.1 could not be found"
    ScenePositionModel:
      type: object
      description: The global position within the build volume of a printer of the model in the scene
      properties:
        x:
          type: number
          description: X-position, with 0 at the center of the print volume, and positive values moving to the right as you face the printer.
        y:
          type: number
          description: Y-position, with 0 at the center of the print volume and positive values moving away from you as you face the printer.
        z:
          type: number
          description: Vertical position of the model, with 0 at the bottom of the build platform.
      required:
        - x
        - y
        - z
    OrientationModel:
      type: object
      description: >
        The orientation of the model in the scene.
        It can be specified using one of the following:
        Euler angles, a transform matrix, or direction vectors.
      oneOf:
        - $ref: '#/components/schemas/EulerAnglesModel'
        - $ref: '#/components/schemas/TransformMatrixModel'
        - $ref: '#/components/schemas/DirectionVectorsModel'
    EulerAnglesModel:
      type: object
      description: "Orientation specified using Euler angles in degrees. Rotation applied in the order: roll, pitch, yaw"
      properties:
        pitch:
          type: number
          description: Rotation of pitch degrees around the x axis (applied second)
        yaw:
          type: number
          description: Rotation of yaw degrees around the y axis (applied last)
        roll:
          type: number
          description: Rotation of roll degress around the z axis (applied first)
      required:
        - pitch
        - yaw
        - roll
    TransformMatrixModel:
      type: object
      description: Orientation specified a 3x3 matrix, the linear component of a 3D rigid transform.
      properties: 
        linear:
          type: array
          items:
            type: array
            items:
              type: number
            minItems: 3
            maxItems: 3
          minItems: 3
          maxItems: 3
      required:
        - linear
    DirectionVectorsModel:
      type: object
      properties:
        z_direction:
          type: array
          description: >
            3D unit vector in model space saying which piece of the model will point "up" in scene space.
          items:
            type: number
          minItems: 3
          maxItems: 3
        x_direction:
          type: array
          description: >
            3D unit vector in model space, perpendicular to Z direction, saying which piece of the
            model will point "right" in scene space.
          items:
            type: number
          minItems: 3
          maxItems: 3
      required:
        - z_direction
        - x_direction
    UnitsModel:
      type: string
      description: The units of the model
      enum:
      - MILLIMETERS
      - INCHES
    ImportUnitsModel:
      type: string
      description: The units of the model
      default: DETECTED
      enum:
      - DETECTED
      - MILLIMETERS
      - INCHES
    ModelProperties:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of the model
        name:
          type: string
          description: The name of the model used within job preparation.
        position:
          $ref: '#/components/schemas/ScenePositionModel'
        orientation:
          $ref: '#/components/schemas/EulerAnglesModel'
        scale:
          type: number
          description: The scale factor to apply to the model
        units:
          $ref: '#/components/schemas/UnitsModel'
        bbox:
          type: object
          properties:
            min_corner:
              $ref: '#/components/schemas/ScenePositionModel'
            max_corner:
              $ref: '#/components/schemas/ScenePositionModel'
        original_file:
          type: string
          description: The original file path of the model
        visible:
          type: boolean
          description: Whether the model is visible in the scene
        has_supports:
          type: boolean
          description: Whether the model has supports
        in_bounds:
          type: boolean
          description: Whether the model is within the build volume
        raw_mesh_hash:
          type: string
          description: The hash of the raw mesh data
        canonical_model_hash:
          type: string
          description: The hash of the canonical model data
    SceneTypeModel:
      type: object
      properties:
        machine_type:
          type: string
          description: The machine type of the scene
        material_code:
          type: string
          description: The material code of the scene
        print_setting:
          type: string
          description: The print setting of the scene
        layer_thickness:
          description: The slice thickness of the scene
          oneOf:
            - type: string
              enum:
              - "ADAPTIVE"
            - type: number
              description: Layer thickness in millimeters
      required:
        - machine_type
        - material_code
        - layer_thickness
      additionalProperties: false
    SceneMaterialsModel:
      oneOf:
        - type: object
          title: "SLA"
          properties:
            volume_ml:
              type: number
              description: The total volume of models and supports in the scene
            unsupported_volume_ml:
              type: number
              description: The total volume of models in the scene
          required:
            - volume_ml
            - unsupported_volume_ml
          additionalProperties: false
        - type: object
          title: "SLS"
          properties:
            total_powder_ml:
              type: number
            total_powder_kg:
              type: number
            total_sintered_powder_ml:
              type: number
            total_sintered_powder_kg:
              type: number
            mass_packing_density:
              type: number
          required:
            - total_powder_ml
            - total_powder_kg
            - total_sintered_powder_ml
            - total_sintered_powder_kg
            - mass_packing_density
          additionalProperties: false
    SceneModel:
      type: object
      properties:
        models:
          type: array
          items:
            $ref: '#/components/schemas/ModelProperties'
        scene_type:
          $ref: '#/components/schemas/SceneTypeModel'
        materials:
          $ref: '#/components/schemas/SceneMaterialsModel'
        layers:
          type: integer
          description: The number of layers in the scene
    RepairBehaviorModel:
      type: string
      description: The behavior to use when loading a broken model
      default: "IGNORE"
      enum:
      - "REPAIR"
      - "ERROR"
      - "IGNORE"
    ModelsSelectionModel:
      type: object
      properties:
        models:
          oneOf:
            - type: string
              title: Select all models
              enum:
              - "ALL"
            - type: array
              title: Apply to a list of specific models
              items:
                type: string
                description: The ID of the model
    WebAuthTokensModel:
      type: object
      properties:
        access_token:
          type: string
          description: The access token for the user
        refresh_token:
          type: string
          description: The refresh token for the user
    PrintValidationResultModel:
      type: object
      properties:
        per_model_results:
          type: object
          description: A map of model IDs to their print validation results.
          additionalProperties:
            type: object
            properties:
              cups: 
                type: integer
                description: The number of cups in the model
              unsupported_minima:
                type: integer
                description: The number of unsupported minima in the model
              undersupported:
                type: boolean
                description: Whether the model is undersupported
              has_seamline:
                type: boolean
                description: Whether the model has a seamline
    EstimatedPrintTimeModel:
      type: object
      properties:
        total_print_time_s:
          type: number
        preprint_time_s:
          type: number
    DeviceStatusModel:
      type: object
      oneOf:
        - type: object
          title: Generic Device
          properties:
            id:
              type: string
            product_name:
              type: string
            status:
              type: string
            is_connected:
              type: boolean
            connection_type:
              type: string
              enum:
                - UNKNOWN
                - VIRTUAL
                - REMOTE
                - USB
                - WIFI
                - ETHERNET
                - ""
            ip_address:
              type: string
            firmware_version:
              type: string
          required:
            - id
            - product_name
            - status
            - is_connected
            - connection_type
            - ip_address
            - firmware_version
          additionalProperties: false
        - type: object
          title: Fleet Control Printer Group
          properties:
            id:
              type: string
            product_name:
              type: string
            status:
              type: string
            is_connected:
              type: boolean
            connection_type:
              type: string
              enum:
                - REMOTE
            firmware_version:
              type: string
            dashboard_group_id:
              type: string
            dashboard_queue_id:
              type: string
          required:
            - id
            - product_name
            - status
            - is_connected
            - connection_type
            - firmware_version
            - dashboard_group_id
            - dashboard_queue_id
          additionalProperties: false
        - type: object
          title: Form 4 Printer
          properties:
            id:
              type: string
            product_name:
              type: string
            status:
              type: string
            is_connected:
              type: boolean
            connection_type:
              type: string
              enum:
                - UNKNOWN
                - VIRTUAL
                - REMOTE
                - USB
                - WIFI
                - ETHERNET
                - ""
            ip_address:
              type: string
            firmware_version:
              type: string
            is_remote_print_enabled:
              type: boolean
            estimated_print_time_remaining_ms:
              type: integer
            tank_id:
              type: string
            tank_material_code:
              type: string
            cartridge_data:
              type: object
              additionalProperties:
                type: object
                properties:
                  cartridgeMaterialCode:
                    type: string
                  cartridgeEstimatedVolumeDispensed_mL:
                    type: number
                  cartridgeOriginalVolume_mL:
                    type: number
                required:
                  - cartridgeMaterialCode
                  - cartridgeEstimatedVolumeDispensed_mL
                  - cartridgeOriginalVolume_mL
                additionalProperties: false
            ready_to_print_now:
              type: boolean
          required:
            - id
            - product_name
            - status
            - is_connected
            - connection_type
            - ip_address
            - firmware_version
            - is_remote_print_enabled
            - estimated_print_time_remaining_ms
            - tank_id
            - tank_material_code
            - cartridge_data
            - ready_to_print_now
          additionalProperties: false
        - type: object
          title: Form 3 Printer
          properties:
            id:
              type: string
            product_name:
              type: string
            status:
              type: string
            is_connected:
              type: boolean
            connection_type:
              type: string
              enum:
                - UNKNOWN
                - VIRTUAL
                - REMOTE
                - USB
                - WIFI
                - ETHERNET
                - ""
            ip_address:
              type: string
            firmware_version:
              type: string
            is_remote_print_enabled:
              type: boolean
            estimated_print_time_remaining_ms:
              type: integer
            tank_id:
              type: string
            tank_material_code:
              type: string
            cartridge_data:
              type: object
              additionalProperties:
                type: object
                properties:
                  cartridgeMaterialCode:
                    type: string
                  cartridgeEstimatedVolumeDispensed_mL:
                    type: number
                  cartridgeOriginalVolume_mL:
                    type: number
                required:
                  - cartridgeMaterialCode
                  - cartridgeEstimatedVolumeDispensed_mL
                  - cartridgeOriginalVolume_mL
                additionalProperties: false
            form_auto_status:
              type: string
            ready_to_print_now:
              type: boolean
          required:
            - id
            - product_name
            - status
            - is_connected
            - connection_type
            - ip_address
            - firmware_version
            - is_remote_print_enabled
            - estimated_print_time_remaining_ms
            - tank_id
            - tank_material_code
            - cartridge_data
            - form_auto_status
            - ready_to_print_now
          additionalProperties: false
        - type: object
          title: Fuse 1/1+ Printer
          properties:
            id:
              type: string
            product_name:
              type: string
            status:
              type: string
            is_connected:
              type: boolean
            connection_type:
              type: string
              enum:
                - UNKNOWN
                - VIRTUAL
                - REMOTE
                - USB
                - WIFI
                - ETHERNET
                - ""
            ip_address:
              type: string
            firmware_version:
              type: string
            is_remote_print_enabled:
              type: boolean
            estimated_print_time_remaining_ms:
              type: integer
            bed_temperature_c:
              type: number
            powder_level:
              type: string
            printing_layer:
              type: integer
            printing_guid:
              type: string
            cylinder_material_code:
              type: string
            cylinder_serial:
              type: string
            printer_material_code:
              type: string
            powder_credit_g:
              type: number
          required:
            - id
            - product_name
            - status
            - is_connected
            - connection_type
            - ip_address
            - firmware_version
            - is_remote_print_enabled
            - estimated_print_time_remaining_ms
            - bed_temperature_c
            - powder_level
            - printing_layer
            - printing_guid
            - cylinder_material_code
            - cylinder_serial
            - printer_material_code
            - powder_credit_g
          additionalProperties: false
        - type: object
          title: Form 2 Printer
          properties:
            id:
              type: string
            product_name:
              type: string
            status:
              type: string
            is_connected:
              type: boolean
            connection_type:
              type: string
              enum:
                - UNKNOWN
                - VIRTUAL
                - REMOTE
                - USB
                - WIFI
                - ETHERNET
                - ""
            ip_address:
              type: string
            firmware_version:
              type: string
            estimated_print_time_remaining_ms:
              type: integer
            tank_id:
              type: string
            tank_material_code:
              type: string
            cartridge_data:
              type: object
              additionalProperties:
                type: object
                properties:
                  cartridgeMaterialCode:
                    type: string
                  cartridgeEstimatedVolumeDispensed_mL:
                    type: number
                  cartridgeOriginalVolume_mL:
                    type: number
                required:
                  - cartridgeMaterialCode
                  - cartridgeEstimatedVolumeDispensed_mL
                  - cartridgeOriginalVolume_mL
                additionalProperties: false
          required:
            - id
            - product_name
            - status
            - is_connected
            - connection_type
            - ip_address
            - firmware_version
            - estimated_print_time_remaining_ms
            - tank_id
            - tank_material_code
            - cartridge_data
          additionalProperties: false
paths:
  /:
    get:
      responses:
        "200":
          description: API version
          content:
            application/json:
              schema:
                type: object
                properties:
                  version:
                    type: string
  /login/:
    post:
      description: "Log in to Formlabs Web Services"
      requestBody:
        description: User credentials
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  title: "Username and password"
                  required:
                    - username
                    - password
                  properties:
                    username:
                      type: string
                    password:
                      type: string
                  additionalProperties: false
                - type: object
                  title: "Access token"
                  required:
                    - access_token
                  properties:
                    access_token:
                      type: string
                  additionalProperties: false
            examples:
              UsernameAndPassword:
                value:
                  username: "username"
                  password: "password"
              AccessToken:
                value:
                  access_token: "EXAMPLE_ACCESS_TOKEN"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebAuthTokensModel'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /scene/:
    get:
      responses:
        "200":
          description: Scene description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SceneModel'
    post:
      description: "Create a new scene"
      parameters: []
      requestBody:
        description: Create a scene with a given printing setup
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SceneTypeModel'
            example:
              machine_type: "FS30-1-0"
              material_code: FLP11B01
              print_setting: DEFAULT
              layer_thickness: "0.11"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SceneModel'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /load-form/:
    post:
      description: "Load a file into the current scene"
      parameters: []
      requestBody:
        description: Full path to the file to load
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - file
              properties:
                file:
                  type: string
            example:
              file: "C:\\Users\\user\\Desktop\\test.form"
      responses:
        "200":
          description: OK
  /scene/save-form/:
    post:
      description: "Save the current scene to a .FORM file"
      parameters: []
      requestBody:
        description: Full path where the file should be saved
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - file
              properties:
                file:
                  type: string
            example:
              file: "C:\\Users\\user\\Desktop\\test.form"
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /scene/save-screenshot/:
    post:
      description: "Save a screenshot the current scene."
      parameters: []
      requestBody:
        description: Full path where the image should be saved
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - file
              properties:
                file:
                  type: string
                  description: The file path to save the .png screenshot to
                  pattern: "^.*\\.png$"
                view_type:
                  type: string
                  description: The type of view to use when taking the screenshot
                  enum:
                  - "ZOOM_ON_MODELS"
                  - "FULL_BUILD_VOLUME"
                  - "FULL_PLATFORM_WIDTH"
                  default: "ZOOM_ON_MODELS"
                models:
                  $ref: '#/components/schemas/ModelsSelectionModel'
            examples:
              Minimal:
                value:
                  file: "C:\\Users\\user\\Desktop\\screenshot.png"
              FullOptions:
                value:
                  file: "C:\\Users\\user\\Desktop\\screenshot.png"
                  view_type: "FULL_BUILD_VOLUME"
                  models: ["0000537c-9ae2-426a-82ee-a007191a8fb5"]
      responses:
        "200":
          description: Success
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /scene/models/{id}/:
    get:
      description: "Get a model's properties"
      parameters:
        - name: id
          in: path
          required: true
          description: The unique identifier of the model
          schema:
            type: string
      responses:
        "200":
          description: Model description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelProperties'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    post:
      description: "Update a model's properties"
      parameters:
        - name: id
          in: path
          required: true
          description: The unique identifier of the model
          schema:
            type: string
      requestBody:
        description: Model properties to update
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the model used within job preparation.
                position:
                  $ref: '#/components/schemas/ScenePositionModel'
                orientation:
                  $ref: '#/components/schemas/OrientationModel'
                scale:
                  type: number
                  description: The scale factor to apply to the model
                units:
                  $ref: '#/components/schemas/UnitsModel'
            examples:
              ChangePosition:
                value:
                  position:
                    x: 10
                    y: 1
                    z: 2
              FullInput:
                value:
                  name: "New name"
                  position:
                    x: 10
                    y: 1
                    z: 2
                  orientation:
                    pitch: 50
                    yaw: 2
                    roll: 39
                  scale: 0.5
                  units: "MILLIMETERS"
      responses:
        "200":
          description: Success
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    delete:
      description: "Delete a model into the current scene"
      parameters:
        - name: id
          in: path
          required: true
          description: The unique identifier of the model
          schema:
            type: string
      responses:
        "200":
          description: OK
  /scene/models/{id}/duplicate/:
    post:
      description: "Duplicate a model"
      parameters:
        - name: id
          in: path
          required: true
          description: The unique identifier of the model
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                count:
                  type: integer
                  description: Number of duplicates to create
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SceneModel'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /scene/models/{id}/replace/:
    post:
      description: "Replace a model currently in the scene with a new model, copying the existing models setup"
      parameters:
        - name: id
          in: path
          required: true
          description: The unique identifier of the model
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                file:
                  type: string
                  description: Full path to the file to load
                repair_behavior:
                  $ref: '#/components/schemas/RepairBehaviorModel'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  warnings:
                    type: array
                    items:
                      type: string
                  model_properties:
                    $ref: '#/components/schemas/ModelProperties'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /scene/import-model/:
    post:
      description: "Load a model into the current scene"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - file
              properties:
                file:
                  type: string
                  description: Full path to the file to load
                repair_behavior:
                  $ref: '#/components/schemas/RepairBehaviorModel'
                name:
                  type: string
                  description: The name of the model used within job preparation.
                position:
                  $ref: '#/components/schemas/ScenePositionModel'
                orientation:
                  $ref: '#/components/schemas/OrientationModel'
                scale:
                  type: number
                  default: 1
                  description: The scale factor to apply to the model
                units:
                  $ref: '#/components/schemas/ImportUnitsModel'
            examples:
              MinimalInput:
                value:
                  file: "C:\\Users\\user\\Desktop\\test.stl"
              FullInput:
                value:
                  file: "C:\\Users\\user\\Desktop\\test.stl"
                  repair_behavior: "REPAIR"
                  name: "Test Model"
                  position:
                    x: 10
                    y: 1
                    z: 2
                  orientation:
                    pitch: 50
                    yaw: 2
                    roll: 39
                  scale: 0.5
                  units: "MILLIMETERS"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelProperties'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /scene/print/:
    post:
      description: "Slice and upload"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - printer
              properties:
                printer:
                  type: string
                  description: Printer serial name, IP address, or Fleet Control Queue ID
                job_name:
                  type: string
            examples:
              Minimal:
                value:
                  printer: "192.168.1.2"
              Full:
                value:
                  printer: "TestyTest"
                  job_name: "Test Job"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  job_id:
                    type: string
                    description: ID of the uploaded job
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /scene/auto-orient/:
    post:
      description: "Run auto orient operation"
      parameters: []
      requestBody:
        description: Models to run the auto orient operation on
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - models
              properties:
                models:
                  $ref: '#/components/schemas/ModelsSelectionModel'
            examples:
              AllModels:
                value:
                  models: "ALL"
              SpecificModels:
                value:
                  models: ["0000537c-9ae2-426a-82ee-a007191a8fb5"]
      responses:
        "200":
          description: Success
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /scene/auto-support/:
    post:
      description: "Run auto support operation"
      parameters: []
      requestBody:
        description: Models to run the auto support operation on
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - models
              properties:
                models:
                  $ref: '#/components/schemas/ModelsSelectionModel'
                raft_type:
                  type: string
                  description: The type of raft to apply to the models
                  enum:
                  - "FULL_RAFT"
                  - "MINI_RAFTS"
                  - "NONE"
                raft_label_enabled:
                  type: boolean
                  description: Whether to enable raft labeling
                breakaway_structure_enabled:
                  type: boolean
                  description: Whether to enable breakaway structure
                density:
                  type: number
                  description: The density of the supports
                  minimum: 0
                touchpoint_size_mm:
                  type: number
                  description: The size of the touchpoints
                  minimum: 0
                internal_supports_enabled:
                  type: boolean
                  description: Whether to enable internal supports
                raft_thickness_mm:
                  type: number
                  description: The thickness of the raft
                  minimum: 0
                slope_multiplier:
                  type: number
                  description: The slope multiplier
                  minimum: 0
                height_above_raft_mm:
                  type: number
                  minimum: 0
                z_compression_correction_mm:
                  type: number
                  minimum: 0
                early_layer_merge_mm:
                  type: number
                  minimum: 0
            examples:
              AllModels:
                value:
                  models: "ALL"
              SpecificModels:
                value:
                  models: ["0000537c-9ae2-426a-82ee-a007191a8fb5"]
      responses:
        "200":
          description: Success
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /scene/auto-pack/:
    post:
      description: "Run auto pack operation"
      parameters: []
      requestBody:
        description: Auto pack parameters
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                model_spacing_mm:
                  type: number
                  description: The minimum spacing between models when packing
                  minimum: 0
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SceneModel'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /scene/print-validation/:
    get:
      description: "Calculate the print validation for the current scene"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrintValidationResultModel'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /scene/estimate-print-time/:
    get:
      description: "Calculate the estimate print time for the current scene"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EstimatedPrintTimeModel'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /devices/:
    get:
      description: "List available device statuses"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: Number of discovered devices
                  devices:
                    type: array
                    items:
                      $ref: '#/components/schemas/DeviceStatusModel'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /devices/{id}/:
    get:
      description: "Get device status"
      parameters:
        - name: id
          in: path
          required: true
          description: The unique identifier of the printer
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceStatusModel'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /discover-devices/:
    post:
      description: "Discover devices on the network"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                timeout_seconds:
                  type: integer
                  description: Number of seconds to wait when discovering devices
                ip_address:
                  type: string
                  description: "Local network IP address to attempt to discover a device at"
            examples:
              DiscoverAllWithTimeout:
                value:
                  timeout_seconds: 10
              DiscoverAtSpecificIP:
                value:
                  ip_address: "192.168.1.10"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: Number of newly discovered devices
                  devices:
                    type: array
                    items:
                      $ref: '#/components/schemas/DeviceStatusModel'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
