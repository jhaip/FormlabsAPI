/**
 * PreForm API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ScenePostRequest model module.
 * @module model/ScenePostRequest
 * @version 1.0
 */
class ScenePostRequest {
    /**
     * Constructs a new <code>ScenePostRequest</code>.
     * @alias module:model/ScenePostRequest
     * @param machineType {String} 
     * @param materialCode {String} 
     * @param printSetting {String} 
     * @param sliceThickness {Number} 
     */
    constructor(machineType, materialCode, printSetting, sliceThickness) { 
        
        ScenePostRequest.initialize(this, machineType, materialCode, printSetting, sliceThickness);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, machineType, materialCode, printSetting, sliceThickness) { 
        obj['machineType'] = machineType;
        obj['materialCode'] = materialCode;
        obj['printSetting'] = printSetting;
        obj['sliceThickness'] = sliceThickness;
    }

    /**
     * Constructs a <code>ScenePostRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ScenePostRequest} obj Optional instance to populate.
     * @return {module:model/ScenePostRequest} The populated <code>ScenePostRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ScenePostRequest();

            if (data.hasOwnProperty('machineType')) {
                obj['machineType'] = ApiClient.convertToType(data['machineType'], 'String');
            }
            if (data.hasOwnProperty('materialCode')) {
                obj['materialCode'] = ApiClient.convertToType(data['materialCode'], 'String');
            }
            if (data.hasOwnProperty('printSetting')) {
                obj['printSetting'] = ApiClient.convertToType(data['printSetting'], 'String');
            }
            if (data.hasOwnProperty('sliceThickness')) {
                obj['sliceThickness'] = ApiClient.convertToType(data['sliceThickness'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ScenePostRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ScenePostRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ScenePostRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['machineType'] && !(typeof data['machineType'] === 'string' || data['machineType'] instanceof String)) {
            throw new Error("Expected the field `machineType` to be a primitive type in the JSON string but got " + data['machineType']);
        }
        // ensure the json data is a string
        if (data['materialCode'] && !(typeof data['materialCode'] === 'string' || data['materialCode'] instanceof String)) {
            throw new Error("Expected the field `materialCode` to be a primitive type in the JSON string but got " + data['materialCode']);
        }
        // ensure the json data is a string
        if (data['printSetting'] && !(typeof data['printSetting'] === 'string' || data['printSetting'] instanceof String)) {
            throw new Error("Expected the field `printSetting` to be a primitive type in the JSON string but got " + data['printSetting']);
        }

        return true;
    }


}

ScenePostRequest.RequiredProperties = ["machineType", "materialCode", "printSetting", "sliceThickness"];

/**
 * @member {String} machineType
 */
ScenePostRequest.prototype['machineType'] = undefined;

/**
 * @member {String} materialCode
 */
ScenePostRequest.prototype['materialCode'] = undefined;

/**
 * @member {String} printSetting
 */
ScenePostRequest.prototype['printSetting'] = undefined;

/**
 * @member {Number} sliceThickness
 */
ScenePostRequest.prototype['sliceThickness'] = undefined;






export default ScenePostRequest;

