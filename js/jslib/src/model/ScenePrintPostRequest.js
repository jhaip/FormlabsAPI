/**
 * PreForm API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ScenePrintPostRequest model module.
 * @module model/ScenePrintPostRequest
 * @version 1.0
 */
class ScenePrintPostRequest {
    /**
     * Constructs a new <code>ScenePrintPostRequest</code>.
     * @alias module:model/ScenePrintPostRequest
     * @param printer {String} Printer serial name, IP address, or Fleet Control Queue ID
     */
    constructor(printer) { 
        
        ScenePrintPostRequest.initialize(this, printer);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, printer) { 
        obj['printer'] = printer;
    }

    /**
     * Constructs a <code>ScenePrintPostRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ScenePrintPostRequest} obj Optional instance to populate.
     * @return {module:model/ScenePrintPostRequest} The populated <code>ScenePrintPostRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ScenePrintPostRequest();

            if (data.hasOwnProperty('printer')) {
                obj['printer'] = ApiClient.convertToType(data['printer'], 'String');
            }
            if (data.hasOwnProperty('job_name')) {
                obj['job_name'] = ApiClient.convertToType(data['job_name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ScenePrintPostRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ScenePrintPostRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ScenePrintPostRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['printer'] && !(typeof data['printer'] === 'string' || data['printer'] instanceof String)) {
            throw new Error("Expected the field `printer` to be a primitive type in the JSON string but got " + data['printer']);
        }
        // ensure the json data is a string
        if (data['job_name'] && !(typeof data['job_name'] === 'string' || data['job_name'] instanceof String)) {
            throw new Error("Expected the field `job_name` to be a primitive type in the JSON string but got " + data['job_name']);
        }

        return true;
    }


}

ScenePrintPostRequest.RequiredProperties = ["printer"];

/**
 * Printer serial name, IP address, or Fleet Control Queue ID
 * @member {String} printer
 */
ScenePrintPostRequest.prototype['printer'] = undefined;

/**
 * @member {String} job_name
 */
ScenePrintPostRequest.prototype['job_name'] = undefined;






export default ScenePrintPostRequest;

