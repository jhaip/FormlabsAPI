/**
 * PreForm API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ImportUnitsModel from './ImportUnitsModel';
import OrientationModel from './OrientationModel';
import RepairBehaviorModel from './RepairBehaviorModel';
import ScenePositionModel from './ScenePositionModel';

/**
 * The SceneImportModelPostRequest model module.
 * @module model/SceneImportModelPostRequest
 * @version 1.0
 */
class SceneImportModelPostRequest {
    /**
     * Constructs a new <code>SceneImportModelPostRequest</code>.
     * @alias module:model/SceneImportModelPostRequest
     * @param file {String} Full path to the file to load
     */
    constructor(file) { 
        
        SceneImportModelPostRequest.initialize(this, file);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, file) { 
        obj['file'] = file;
    }

    /**
     * Constructs a <code>SceneImportModelPostRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SceneImportModelPostRequest} obj Optional instance to populate.
     * @return {module:model/SceneImportModelPostRequest} The populated <code>SceneImportModelPostRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SceneImportModelPostRequest();

            if (data.hasOwnProperty('file')) {
                obj['file'] = ApiClient.convertToType(data['file'], 'String');
            }
            if (data.hasOwnProperty('repair_behavior')) {
                obj['repair_behavior'] = RepairBehaviorModel.constructFromObject(data['repair_behavior']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('position')) {
                obj['position'] = ScenePositionModel.constructFromObject(data['position']);
            }
            if (data.hasOwnProperty('orientation')) {
                obj['orientation'] = OrientationModel.constructFromObject(data['orientation']);
            }
            if (data.hasOwnProperty('scale')) {
                obj['scale'] = ApiClient.convertToType(data['scale'], 'Number');
            }
            if (data.hasOwnProperty('units')) {
                obj['units'] = ImportUnitsModel.constructFromObject(data['units']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SceneImportModelPostRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SceneImportModelPostRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SceneImportModelPostRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['file'] && !(typeof data['file'] === 'string' || data['file'] instanceof String)) {
            throw new Error("Expected the field `file` to be a primitive type in the JSON string but got " + data['file']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `position`
        if (data['position']) { // data not null
          ScenePositionModel.validateJSON(data['position']);
        }
        // validate the optional field `orientation`
        if (data['orientation']) { // data not null
          OrientationModel.validateJSON(data['orientation']);
        }

        return true;
    }


}

SceneImportModelPostRequest.RequiredProperties = ["file"];

/**
 * Full path to the file to load
 * @member {String} file
 */
SceneImportModelPostRequest.prototype['file'] = undefined;

/**
 * @member {module:model/RepairBehaviorModel} repair_behavior
 */
SceneImportModelPostRequest.prototype['repair_behavior'] = undefined;

/**
 * The name of the model used within job preparation.
 * @member {String} name
 */
SceneImportModelPostRequest.prototype['name'] = undefined;

/**
 * @member {module:model/ScenePositionModel} position
 */
SceneImportModelPostRequest.prototype['position'] = undefined;

/**
 * @member {module:model/OrientationModel} orientation
 */
SceneImportModelPostRequest.prototype['orientation'] = undefined;

/**
 * The scale factor to apply to the model
 * @member {Number} scale
 * @default 1
 */
SceneImportModelPostRequest.prototype['scale'] = 1;

/**
 * @member {module:model/ImportUnitsModel} units
 */
SceneImportModelPostRequest.prototype['units'] = undefined;






export default SceneImportModelPostRequest;

