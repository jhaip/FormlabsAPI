/**
 * PreForm API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EulerAnglesModel model module.
 * @module model/EulerAnglesModel
 * @version 1.0
 */
class EulerAnglesModel {
    /**
     * Constructs a new <code>EulerAnglesModel</code>.
     * Orientation specified using Euler angles in degrees. Rotation applied in the order: roll, pitch, yaw
     * @alias module:model/EulerAnglesModel
     * @param pitch {Number} Rotation of pitch degrees around the x axis (applied second)
     * @param yaw {Number} Rotation of yaw degrees around the y axis (applied last)
     * @param roll {Number} Rotation of roll degress around the z axis (applied first)
     */
    constructor(pitch, yaw, roll) { 
        
        EulerAnglesModel.initialize(this, pitch, yaw, roll);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, pitch, yaw, roll) { 
        obj['pitch'] = pitch;
        obj['yaw'] = yaw;
        obj['roll'] = roll;
    }

    /**
     * Constructs a <code>EulerAnglesModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EulerAnglesModel} obj Optional instance to populate.
     * @return {module:model/EulerAnglesModel} The populated <code>EulerAnglesModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EulerAnglesModel();

            if (data.hasOwnProperty('pitch')) {
                obj['pitch'] = ApiClient.convertToType(data['pitch'], 'Number');
            }
            if (data.hasOwnProperty('yaw')) {
                obj['yaw'] = ApiClient.convertToType(data['yaw'], 'Number');
            }
            if (data.hasOwnProperty('roll')) {
                obj['roll'] = ApiClient.convertToType(data['roll'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EulerAnglesModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EulerAnglesModel</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of EulerAnglesModel.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

EulerAnglesModel.RequiredProperties = ["pitch", "yaw", "roll"];

/**
 * Rotation of pitch degrees around the x axis (applied second)
 * @member {Number} pitch
 */
EulerAnglesModel.prototype['pitch'] = undefined;

/**
 * Rotation of yaw degrees around the y axis (applied last)
 * @member {Number} yaw
 */
EulerAnglesModel.prototype['yaw'] = undefined;

/**
 * Rotation of roll degress around the z axis (applied first)
 * @member {Number} roll
 */
EulerAnglesModel.prototype['roll'] = undefined;






export default EulerAnglesModel;

