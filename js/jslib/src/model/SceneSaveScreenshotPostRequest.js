/**
 * PreForm API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ModelsSelectionModel from './ModelsSelectionModel';

/**
 * The SceneSaveScreenshotPostRequest model module.
 * @module model/SceneSaveScreenshotPostRequest
 * @version 1.0
 */
class SceneSaveScreenshotPostRequest {
    /**
     * Constructs a new <code>SceneSaveScreenshotPostRequest</code>.
     * @alias module:model/SceneSaveScreenshotPostRequest
     * @param file {String} The file path to save the .png screenshot to
     */
    constructor(file) { 
        
        SceneSaveScreenshotPostRequest.initialize(this, file);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, file) { 
        obj['file'] = file;
    }

    /**
     * Constructs a <code>SceneSaveScreenshotPostRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SceneSaveScreenshotPostRequest} obj Optional instance to populate.
     * @return {module:model/SceneSaveScreenshotPostRequest} The populated <code>SceneSaveScreenshotPostRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SceneSaveScreenshotPostRequest();

            if (data.hasOwnProperty('file')) {
                obj['file'] = ApiClient.convertToType(data['file'], 'String');
            }
            if (data.hasOwnProperty('view_type')) {
                obj['view_type'] = ApiClient.convertToType(data['view_type'], 'String');
            }
            if (data.hasOwnProperty('models')) {
                obj['models'] = ModelsSelectionModel.constructFromObject(data['models']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SceneSaveScreenshotPostRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SceneSaveScreenshotPostRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SceneSaveScreenshotPostRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['file'] && !(typeof data['file'] === 'string' || data['file'] instanceof String)) {
            throw new Error("Expected the field `file` to be a primitive type in the JSON string but got " + data['file']);
        }
        // ensure the json data is a string
        if (data['view_type'] && !(typeof data['view_type'] === 'string' || data['view_type'] instanceof String)) {
            throw new Error("Expected the field `view_type` to be a primitive type in the JSON string but got " + data['view_type']);
        }
        // validate the optional field `models`
        if (data['models']) { // data not null
          ModelsSelectionModel.validateJSON(data['models']);
        }

        return true;
    }


}

SceneSaveScreenshotPostRequest.RequiredProperties = ["file"];

/**
 * The file path to save the .png screenshot to
 * @member {String} file
 */
SceneSaveScreenshotPostRequest.prototype['file'] = undefined;

/**
 * The type of view to use when taking the screenshot
 * @member {module:model/SceneSaveScreenshotPostRequest.ViewTypeEnum} view_type
 * @default 'ZOOM_ON_MODELS'
 */
SceneSaveScreenshotPostRequest.prototype['view_type'] = 'ZOOM_ON_MODELS';

/**
 * @member {module:model/ModelsSelectionModel} models
 */
SceneSaveScreenshotPostRequest.prototype['models'] = undefined;





/**
 * Allowed values for the <code>view_type</code> property.
 * @enum {String}
 * @readonly
 */
SceneSaveScreenshotPostRequest['ViewTypeEnum'] = {

    /**
     * value: "ZOOM_ON_MODELS"
     * @const
     */
    "ZOOM_ON_MODELS": "ZOOM_ON_MODELS",

    /**
     * value: "FULL_BUILD_VOLUME"
     * @const
     */
    "FULL_BUILD_VOLUME": "FULL_BUILD_VOLUME",

    /**
     * value: "FULL_PLATFORM_WIDTH"
     * @const
     */
    "FULL_PLATFORM_WIDTH": "FULL_PLATFORM_WIDTH"
};



export default SceneSaveScreenshotPostRequest;

