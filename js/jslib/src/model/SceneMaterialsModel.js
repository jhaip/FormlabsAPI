/**
 * PreForm API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SLA from './SLA';
import SLS from './SLS';

/**
 * The SceneMaterialsModel model module.
 * @module model/SceneMaterialsModel
 * @version 1.0
 */
class SceneMaterialsModel {
    /**
     * Constructs a new <code>SceneMaterialsModel</code>.
     * @alias module:model/SceneMaterialsModel
     * @param {(module:model/SLA|module:model/SLS)} instance The actual instance to initialize SceneMaterialsModel.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "SLA") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                SLA.validateJSON(instance); // throw an exception if no match
                // create SLA from JS object
                this.actualInstance = SLA.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into SLA
            errorMessages.push("Failed to construct SLA: " + err)
        }

        try {
            if (typeof instance === "SLS") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                SLS.validateJSON(instance); // throw an exception if no match
                // create SLS from JS object
                this.actualInstance = SLS.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into SLS
            errorMessages.push("Failed to construct SLS: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `SceneMaterialsModel` with oneOf schemas SLA, SLS. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `SceneMaterialsModel` with oneOf schemas SLA, SLS. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>SceneMaterialsModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SceneMaterialsModel} obj Optional instance to populate.
     * @return {module:model/SceneMaterialsModel} The populated <code>SceneMaterialsModel</code> instance.
     */
    static constructFromObject(data, obj) {
        return new SceneMaterialsModel(data);
    }

    /**
     * Gets the actual instance, which can be <code>SLA</code>, <code>SLS</code>.
     * @return {(module:model/SLA|module:model/SLS)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>SLA</code>, <code>SLS</code>.
     * @param {(module:model/SLA|module:model/SLS)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = SceneMaterialsModel.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of SceneMaterialsModel from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/SceneMaterialsModel} An instance of SceneMaterialsModel.
     */
    static fromJSON = function(json_string){
        return SceneMaterialsModel.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * The total volume of models and supports in the scene
 * @member {Number} volume_ml
 */
SceneMaterialsModel.prototype['volume_ml'] = undefined;

/**
 * The total volume of models in the scene
 * @member {Number} unsupported_volume_ml
 */
SceneMaterialsModel.prototype['unsupported_volume_ml'] = undefined;

/**
 * @member {Number} total_powder_ml
 */
SceneMaterialsModel.prototype['total_powder_ml'] = undefined;

/**
 * @member {Number} total_powder_kg
 */
SceneMaterialsModel.prototype['total_powder_kg'] = undefined;

/**
 * @member {Number} total_sintered_powder_ml
 */
SceneMaterialsModel.prototype['total_sintered_powder_ml'] = undefined;

/**
 * @member {Number} total_sintered_powder_kg
 */
SceneMaterialsModel.prototype['total_sintered_powder_kg'] = undefined;

/**
 * @member {Number} mass_packing_density
 */
SceneMaterialsModel.prototype['mass_packing_density'] = undefined;


SceneMaterialsModel.OneOf = ["SLA", "SLS"];

export default SceneMaterialsModel;

