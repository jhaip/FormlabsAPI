/**
 * PreForm API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SceneTypeModelLayerThickness from './SceneTypeModelLayerThickness';

/**
 * The SceneTypeModel model module.
 * @module model/SceneTypeModel
 * @version 1.0
 */
class SceneTypeModel {
    /**
     * Constructs a new <code>SceneTypeModel</code>.
     * @alias module:model/SceneTypeModel
     */
    constructor() { 
        
        SceneTypeModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SceneTypeModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SceneTypeModel} obj Optional instance to populate.
     * @return {module:model/SceneTypeModel} The populated <code>SceneTypeModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SceneTypeModel();

            if (data.hasOwnProperty('machine_type')) {
                obj['machine_type'] = ApiClient.convertToType(data['machine_type'], 'String');
            }
            if (data.hasOwnProperty('material_code')) {
                obj['material_code'] = ApiClient.convertToType(data['material_code'], 'String');
            }
            if (data.hasOwnProperty('print_setting')) {
                obj['print_setting'] = ApiClient.convertToType(data['print_setting'], 'String');
            }
            if (data.hasOwnProperty('layer_thickness')) {
                obj['layer_thickness'] = SceneTypeModelLayerThickness.constructFromObject(data['layer_thickness']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SceneTypeModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SceneTypeModel</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['machine_type'] && !(typeof data['machine_type'] === 'string' || data['machine_type'] instanceof String)) {
            throw new Error("Expected the field `machine_type` to be a primitive type in the JSON string but got " + data['machine_type']);
        }
        // ensure the json data is a string
        if (data['material_code'] && !(typeof data['material_code'] === 'string' || data['material_code'] instanceof String)) {
            throw new Error("Expected the field `material_code` to be a primitive type in the JSON string but got " + data['material_code']);
        }
        // ensure the json data is a string
        if (data['print_setting'] && !(typeof data['print_setting'] === 'string' || data['print_setting'] instanceof String)) {
            throw new Error("Expected the field `print_setting` to be a primitive type in the JSON string but got " + data['print_setting']);
        }
        // validate the optional field `layer_thickness`
        if (data['layer_thickness']) { // data not null
          SceneTypeModelLayerThickness.validateJSON(data['layer_thickness']);
        }

        return true;
    }


}



/**
 * The machine type of the scene
 * @member {String} machine_type
 */
SceneTypeModel.prototype['machine_type'] = undefined;

/**
 * The material code of the scene
 * @member {String} material_code
 */
SceneTypeModel.prototype['material_code'] = undefined;

/**
 * The print setting of the scene
 * @member {String} print_setting
 */
SceneTypeModel.prototype['print_setting'] = undefined;

/**
 * @member {module:model/SceneTypeModelLayerThickness} layer_thickness
 */
SceneTypeModel.prototype['layer_thickness'] = undefined;






export default SceneTypeModel;

