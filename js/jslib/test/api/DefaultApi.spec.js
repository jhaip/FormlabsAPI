/**
 * PreForm API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.PreFormApi);
  }
}(this, function(expect, PreFormApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new PreFormApi.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('autoLayoutPost', function() {
      it('should call autoLayoutPost successfully', function(done) {
        //uncomment below and update the code to test autoLayoutPost
        //instance.autoLayoutPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('autoOrientPost', function() {
      it('should call autoOrientPost successfully', function(done) {
        //uncomment below and update the code to test autoOrientPost
        //instance.autoOrientPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('autoSupportPost', function() {
      it('should call autoSupportPost successfully', function(done) {
        //uncomment below and update the code to test autoSupportPost
        //instance.autoSupportPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('exportPost', function() {
      it('should call exportPost successfully', function(done) {
        //uncomment below and update the code to test exportPost
        //instance.exportPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('loadFormPost', function() {
      it('should call loadFormPost successfully', function(done) {
        //uncomment below and update the code to test loadFormPost
        //instance.loadFormPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('modelsIdDelete', function() {
      it('should call modelsIdDelete successfully', function(done) {
        //uncomment below and update the code to test modelsIdDelete
        //instance.modelsIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('saveFormPost', function() {
      it('should call saveFormPost successfully', function(done) {
        //uncomment below and update the code to test saveFormPost
        //instance.saveFormPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sceneGet', function() {
      it('should call sceneGet successfully', function(done) {
        //uncomment below and update the code to test sceneGet
        //instance.sceneGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sceneImportModelPost', function() {
      it('should call sceneImportModelPost successfully', function(done) {
        //uncomment below and update the code to test sceneImportModelPost
        //instance.sceneImportModelPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('scenePost', function() {
      it('should call scenePost successfully', function(done) {
        //uncomment below and update the code to test scenePost
        //instance.scenePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1PrintPost', function() {
      it('should call v1PrintPost successfully', function(done) {
        //uncomment below and update the code to test v1PrintPost
        //instance.v1PrintPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1SlicePost', function() {
      it('should call v1SlicePost successfully', function(done) {
        //uncomment below and update the code to test v1SlicePost
        //instance.v1SlicePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
